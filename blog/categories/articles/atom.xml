<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: articles | My code … :) :)]]></title>
  <link href="http://Dineshs91.github.io/blog/categories/articles/atom.xml" rel="self"/>
  <link href="http://Dineshs91.github.io/"/>
  <updated>2014-08-08T23:16:44+05:30</updated>
  <id>http://Dineshs91.github.io/</id>
  <author>
    <name><![CDATA[DINESH S]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[A little about me]]></title>
    <link href="http://Dineshs91.github.io/blog/2014/08/08/a-little-about-me/"/>
    <updated>2014-08-08T22:47:00+05:30</updated>
    <id>http://Dineshs91.github.io/blog/2014/08/08/a-little-about-me</id>
    <content type="html"><![CDATA[<p>I am a self taught programmer. It started as a journey to explore the world of computers, the digital world. I started of with the fundamentals. I can say that my entire learning was a fruit of all the questions I’ve asked myself. Questions, Like how internet works ? I started programming just to answer this question “How does a c program make a computer do some work?”. In schools and colleges they’ve always taught us how to write c program in an editor, then compile and run. But I wasn’t able to connect the dots. How could this be making a computer work? I used to think. I found the answer to this. It was Turbo C,which by providing user friendliness was hiding something. Only after I used gcc, I understood the process. There can be two sides, one is user friendliness and the other is transparency. Take the example of windows and linux, windows is user friendly but hides a lot about what’s happening inside. But linux is very transparent in terms of what is happening. You can see the code for yourself. This is one of the reason’s that made me believe “ok C program can make computer do things”. I never said no to anything related to computer. I started with GUI programming in GTK. No wonder I started with GUI, as I was a windows user back then. After a couple of months I replaced windows with ubuntu. Using linux was very different. It gave me the feeling of a hacker. Typing commands in console, I felt like, I am actually interacting with the computer. Suddenly I felt empowered. I started learning about networking. Wireshark, tcpdump, airmon-ng using these tools I got to know what happens behind the scene. So I learnt some things about networking, which previously, I took for granted.</p>

<p>One day when I was using this tool scapy, I got very much interested in python. So I started learning python. The name was also very cool. It was very easy to learn. I opened python docs in browser and in console I opened python, and started typing commands. Actually I was programming Interactively. Then I started out with Interview Street. It is a platform where you can solve programming challenges. It was fascinating. Later Interview Street became Hackerrank. By solving those challenges, I got better at the way I think. I still solve challenges in Hackerrank. It’s good for my mind.</p>

<p>Then I got to know about git and github. It was intriguing, to know how github works. Distributed collaboration using git, remarkable. Open source is a world that is always special to me.</p>

<p>All I understood is that I can learn things fast.</p>

<p>My brother was doing MBA in Information security. So I got to know about Nmap, Netcat, snort, nessus, rainbow tables etc. I also configured snort in my laptop. I also wrote a simple plugin for nessus.</p>

<p>Programming made me confident, I have gone through one of the toughest times in my life
without a lot of pain because of programming. It was so addictive. I was very much in love with it, so much that I wasn’t thinking of anything else. It made me believe that I can do things. Actual things that can be useful to others. Above all, it makes me very happy. It changed the way I think. I started to approach things in an efficient way, Thanks to programming. I am very grateful to the community. I have never seen anything like that before. Great pioneers are part of it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Where is equal opportunity in this world ??]]></title>
    <link href="http://Dineshs91.github.io/blog/2014/07/20/equal-opportunity/"/>
    <updated>2014-07-20T16:28:00+05:30</updated>
    <id>http://Dineshs91.github.io/blog/2014/07/20/equal-opportunity</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve been looking at jobs section in a number of websites and I found out something interesting. All of them
have outlined the skills they are looking for, the amount of experience needed etc. And the dumbest requirement I
found is a degree in computer science, worst of all some sites mentioned that a degree in computer science from
premium institutes is neede. This is absolutely insane. Analyzing their needs it&rsquo;s very clear that equal
opportunity is not given. They are clearly biased towards some institutions. They think that people who do their
degree&rsquo;s in those premium institutes are the best ones and the students who do their degree&rsquo;s in other institutions
are worthless.</p>

<p>It makes me very sad to see how the world is being shaped. Do grade&rsquo;s have anything to do with skill. I think
it&rsquo;s not. There are some people in the world who just don&rsquo;t care about grade&rsquo;s, but care very much about knowledge.
There are brilliant people from other universities also. The number can be less, but still they are clearly ignoring
talent. They don&rsquo;t want to take pain. They just want to take the well known path.</p>

<p>I very much believe that education has nothing to do with a person&rsquo;s skill/talent. All that is required is the
right thinking and motivation. The whole world is driven by money, who want&rsquo;s to risk it. They just hire people from premium institutions, just to be on the safer side.</p>

<p>First entrepreneurs thinking should change. They are filtering people in wrong ways. It’s absolutely fine if you reject someone in an interview, but rejecting at the first step, is
bad. Hope this situation changes.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My experience with MacBook Pro]]></title>
    <link href="http://Dineshs91.github.io/blog/2014/05/23/my-experience-with-macbook-pro/"/>
    <updated>2014-05-23T23:42:00+05:30</updated>
    <id>http://Dineshs91.github.io/blog/2014/05/23/my-experience-with-macbook-pro</id>
    <content type="html"><![CDATA[<p>Exactly a year ago, I got my macbook pro 13’ version. It has a special place in my life.
Trust me, it made my life easier. I would say, it’s definitely worth it. I never had to
worry about it. It just works. I do not even shut it down for a month or more. But it never showed a hint of failure. I remember my days with windows, where most of the time I kept cursing it. Using a mac, I just had to worry about the things I was trying to accomplish and never about the laptop itself. One more thing I liked is the terminal.
Without terminal I would not have bought a mac. So if you want this kind of experience, get yourself a mac.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Power of brain]]></title>
    <link href="http://Dineshs91.github.io/blog/2014/05/10/power-of-brain/"/>
    <updated>2014-05-10T12:56:00+05:30</updated>
    <id>http://Dineshs91.github.io/blog/2014/05/10/power-of-brain</id>
    <content type="html"><![CDATA[<p>While talking about the power of brain, who can understand it better than
a programmer.</p>

<p>Yes, it&rsquo;s true, a programmer knows what human brain can do.</p>

<p>Most of the programmer&rsquo;s would have got this feeling at some point in their programming
career, god why is it so hard to write a program, but my brain knows how to do it. Our
brain does it instantaneously, that we don&rsquo;t know what is happening(the actual logic).
We have to think how our brain does it.</p>

<p>For example, take this problem where you have to print whether a
given string is a palindrome or not.</p>

<p>BRAIN:</p>

<p>We can say wether it&rsquo;s a palindrome or not, the second we look at it.</p>

<p>COMPUTER:</p>

<p>You have to write a program to verify that. It takes some thinking.
Then he writes an algorithm.</p>

<p>You can see that brain is faster than computer.</p>

<p>Hey wait, there is a catch !!</p>

<p>There is a cross over point, after which computer becomes faster than brain.</p>

<p>How? Let&rsquo;s take the same example of palindrome. Maybe for smaller inputs brain
is faster, but for larger inputs definitely a computer is faster and
less error prone.</p>

<p>By programming we are just transferring our thinking process to a computer.</p>

<p>So there is nothing more powerful than a human brain in this world.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A great Programmer/Hacker]]></title>
    <link href="http://Dineshs91.github.io/blog/2014/04/10/a-programmer-or-a-hacker/"/>
    <updated>2014-04-10T12:57:00+05:30</updated>
    <id>http://Dineshs91.github.io/blog/2014/04/10/a-programmer-or-a-hacker</id>
    <content type="html"><![CDATA[<p>I’ve always wondered what it takes to become a great programmer. I kept pondering on this question for a year. I’ve seen programmers around me, after a lot of research i found that  a programmer becomes a great programmer by following certain ideas. I am laying down some ideas which i think makes a great programmer.</p>

<ol>
<li><p>A great programmer always thinks how he can make a computer work the way he wants it to.</p>

<p> The definition of Hacker by paul graham: A hacker is a person who can make the computer work the way he want’s it to work.</p></li>
<li><p>Hackers don’t have a ’no’. This is the difference between a programer and a hacker. Programmer trusts his skill sets and if a problem is beyond his understanding then he will give you a ‘no’. But hackers definitely will find a workaround and they will succeed in that.</p></li>
<li><p>They write efficient, reliable and readable code naturally. They never think of it in particular.</p></li>
<li><p>As a child we used to dream a lot of things. But as time goes by we stop dreaming, our imagination becomes zero. For every fascinating thought that comes to our mind, we throw it away saying it’s impossible, such a thing could never happen. This is wrong, imagination is the one thing that has no boundaries, imagination is what brought iPod, iPhone to reality. Explore all dimensions, as steve jobs explored simplicity. Who would have thought simplicity is such an important thing. Don’t take anything for granted. Think why something is designed the way it is.</p></li>
</ol>


<p>To become a hacker.</p>

<ol>
<li><p>Don’t program like a fool. Imagination is the key here. Take this example,</p>

<p> int a = 10;</p>

<p> Ordinay programmer’s thought: Variable a with value 10</p>

<p> Great programmer’s thought: Variable a with value 10 and takes 2 bytes of memory. He imagines a box with value 10. It occupies some space(which is memory).</p>

<p> It is evident from the example that the difference is the way they think. As you program build something in your mind. This will give you amazing results. Don’t simply program, live with it.</p></li>
<li><p>You will require a lot of skills. Programming is just the beginning. It is the thinking that is important. Say for example, you have learnt C language. You are an expert in it. But what will you do with it. It’s like learning english and never speaking in english. So an idea is important. Linus torvalds idea was to create a UNIX like operating system, so he created it. As you can see idea is the first part, programming comes later. He used his skills to create linux. Similarly Facebook was an idea, so was amazon. So “THINK FIRST CODE LATER”.</p></li>
<li><p>Time management is very important. There are a gazillion things you can do or learn in computers. After a while you will understand that you cannot learn or do all of them. Find what you are really interested in, prioritise your goals and work towards them.</p></li>
<li><p>Hackers love to work on challenging problems. They love to challenge themselves.</p></li>
</ol>


<p>Remember, the key to become a hacker is THINKING. Great innovations come not because of someone’s talents/skills, but come’s with their ideas.</p>

<p>Be patient, do what you love you will always succeed.</p>
]]></content>
  </entry>
  
</feed>
