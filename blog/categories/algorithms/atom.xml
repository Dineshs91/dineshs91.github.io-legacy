<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: algorithms | My code â€¦ :) :)]]></title>
  <link href="http://Dineshs91.github.io/blog/categories/algorithms/atom.xml" rel="self"/>
  <link href="http://Dineshs91.github.io/"/>
  <updated>2014-01-19T13:17:49+05:30</updated>
  <id>http://Dineshs91.github.io/</id>
  <author>
    <name><![CDATA[DINESH S]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[DFS Demystified]]></title>
    <link href="http://Dineshs91.github.io/blog/2014/01/11/dfs-demystified/"/>
    <updated>2014-01-11T19:29:00+05:30</updated>
    <id>http://Dineshs91.github.io/blog/2014/01/11/dfs-demystified</id>
    <content type="html"><![CDATA[<p>Depth First Search (DFS).</p>

<p>A DFS explores a path all the way to a leaf before backtracking and exploring another path.</p>

<p>DFS always expands one of the nodes at the deepest level of the tree.
The search goes back once it hits a dead end.</p>

<p>Strategy of DFS is to search deeper in the graph whenever possible</p>

<p>Advantages of DFS:</p>

<ol>
<li>It is cheap on memory.</li>
<li>It can use recursion.</li>
<li>It is better when there are many solution nodes.</li>
</ol>


<p>Performance:</p>

<ol>
<li>Completeness: Is algorithm guaranteed to find a solution if one exists.</li>
<li>Optimality: Whether the algorithm finds the optimal solution.</li>
<li>Time complexity: How long the algorithm takes the find the solution.</li>
<li>Space complexity: How much memory is needed.</li>
</ol>


<p>Measuring complexity:</p>

<ol>
<li>Branching factor(b): Maximum number of successors of any node.</li>
<li>Depth(m): Shallowest goal node in number of steps or levels.</li>
<li>Maximum depth: Maximum depth of the search tree.</li>
</ol>

]]></content>
  </entry>
  
</feed>
