<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: python | My code â€¦ :) :)]]></title>
  <link href="http://Dineshs91.github.io/blog/categories/python/atom.xml" rel="self"/>
  <link href="http://Dineshs91.github.io/"/>
  <updated>2014-01-11T19:49:09+05:30</updated>
  <id>http://Dineshs91.github.io/</id>
  <author>
    <name><![CDATA[DINESH S]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[alphabet-frequency]]></title>
    <link href="http://Dineshs91.github.io/blog/2013/08/07/alphabet-frequency/"/>
    <updated>2013-08-07T15:28:00+05:30</updated>
    <id>http://Dineshs91.github.io/blog/2013/08/07/alphabet-frequency</id>
    <content type="html"><![CDATA[<p>Alphabet-frequency is a program i have written using python2.7 which graphically displays the frequency of letters in a specified file.
You can have a look at <a href="https://github.com/Dineshs91/alphabet-frequency">https://github.com/Dineshs91/alphabet-frequency</a> .</p>

<p>You require matplotlib and numpy modules to run this program.</p>

<p>In the first few lines i have imported the necessary modules. Matplotlib module is used for plotting data. arparse module is used for command line argument parsing.</p>

<p>There are a lot of options which you can provide. The default option is alphabets(lower and upper case). This is a very simple program. You can understand it by looking at the code itself. Output is a graph which shows how frequently a character appears in a file.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[trying google app engine]]></title>
    <link href="http://Dineshs91.github.io/blog/2013/08/07/trying-google-app-engine/"/>
    <updated>2013-08-07T15:10:00+05:30</updated>
    <id>http://Dineshs91.github.io/blog/2013/08/07/trying-google-app-engine</id>
    <content type="html"><![CDATA[<p>If you are learning python then you got to try google app engine(GAE). Google app engine provides a infrastructure for hosting your web app. You must be knowing some html to play with it. If you have a google account, well and good otherwise create it. You need it to host your web app. Download google app engine(python) to your computer. This lets you test your app locally. You can deploy directly from the software itself. There is a course in udacity which teaches web development. It teaches it with the help of GAE If you want to have greater insight into the topic check the google developer site. You can use 10 apps for free and after that you have to pay. Creating a web app can be fun way to explore both python and web development. I agree that GAE doesn&rsquo;t require complex python but it&rsquo;s worth  a try if you are interested in web development.</p>

<p>Note: Use GAE for python.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[merge sort]]></title>
    <link href="http://Dineshs91.github.io/blog/2013/07/23/merge-sort/"/>
    <updated>2013-07-23T14:38:00+05:30</updated>
    <id>http://Dineshs91.github.io/blog/2013/07/23/merge-sort</id>
    <content type="html"><![CDATA[<p>Merge sort is a sorting method which uses divide and conquer algorithm. It has a running time of big oh O(N log N).</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Merge sort lang: python </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>! /usr/bin/env python&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h2>Program for merge sort&lt;/h2>
</span><span class='line'>
</span><span class='line'>&lt;p>def divide(array):&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>if len(array) &lt; 2:
</span><span class='line'>    return array
</span><span class='line'>length = len(array)
</span><span class='line'>left = array[:length/2]
</span><span class='line'>right = array[length/2:]
</span><span class='line'>left = divide(left)
</span><span class='line'>right = divide(right)
</span><span class='line'>#print left, right
</span><span class='line'>sort_array = []
</span><span class='line'>i = 0
</span><span class='line'>j = 0
</span><span class='line'>while i &lt; len(left) and j &lt; len(right):
</span><span class='line'>    if left[i] &lt;= right[j]:
</span><span class='line'>        sort_array.append(left[i])
</span><span class='line'>        i += 1
</span><span class='line'>    else:
</span><span class='line'>        sort_array.append(right[j])
</span><span class='line'>        j += 1
</span><span class='line'>while i &lt; len(left):
</span><span class='line'>    sort_array.append(left[i])
</span><span class='line'>    i += 1
</span><span class='line'>while j &lt; len(right):
</span><span class='line'>    sort_array.append(right[j])
</span><span class='line'>    j += 1
</span><span class='line'>return sort_array
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>def main():&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>array = raw_input("Enter the numbers to be sorted:")
</span><span class='line'>array = [int(i) for i in array.split()]
</span><span class='line'>sort_array = divide(array)
</span><span class='line'>print sort_array
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>if &lt;strong>name&lt;/strong> == &ldquo;&lt;strong>main&lt;/strong>&rdquo;:&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>main()
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>If you want to use sorting in your program always use the builtin function &lsquo;sort&rsquo;. It is always efficient than what we can write.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[List comprehension]]></title>
    <link href="http://Dineshs91.github.io/blog/2013/07/23/list-comprehension/"/>
    <updated>2013-07-23T11:12:00+05:30</updated>
    <id>http://Dineshs91.github.io/blog/2013/07/23/list-comprehension</id>
    <content type="html"><![CDATA[<p>List comprehensions are very useful. Here are some examples</p>

<p>1.) Get input and store it in a list</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>lang: python </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;blockquote>&lt;blockquote>&lt;blockquote>&lt;p>a = [raw_input() for _ in range(n)]</span></code></pre></td></tr></table></div></figure></notextile></div></p></blockquote></blockquote></blockquote>

<p>Here &lsquo;n&rsquo; is the number of elements. For example if you want to store 5 names then &lsquo;n&rsquo; is 5.</p>

<p>2.) Convert numbers from a list which are stored in string to int</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>lang: python </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;blockquote>&lt;blockquote>&lt;blockquote>&lt;p>a = [int(i) for i in lis]</span></code></pre></td></tr></table></div></figure></notextile></div></p></blockquote></blockquote></blockquote>

<p>Here &lsquo;lis&rsquo; is the list which contains the numbers.</p>

<p>3.) If we want a multidimensional list</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>lang: python </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;blockquote>&lt;blockquote>&lt;blockquote>&lt;p>a = [ [0 for col in range(5)] for row in range(10)]</span></code></pre></td></tr></table></div></figure></notextile></div></p></blockquote></blockquote></blockquote>

<p>This creates a multidimensional list containing 10 rows and 5 columns.</p>

<p>4.) Get the numbers greater than 100 from another list</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>lang: python </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;blockquote>&lt;blockquote>&lt;blockquote>&lt;p>a = [i for i in lis if i > 100]</span></code></pre></td></tr></table></div></figure></notextile></div></p></blockquote></blockquote></blockquote>

<p>&lsquo;lis&rsquo; is the list which contains the numbers. The numbers in list &lsquo;lis&rsquo; which are greater than 100 are added to list &lsquo;a&rsquo;</p>

<p>5.) If you want to add a number to all the numbers in a list</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>lang: python </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;blockquote>&lt;blockquote>&lt;blockquote>&lt;p>a = [i+3 for i in lis]</span></code></pre></td></tr></table></div></figure></notextile></div></p></blockquote></blockquote></blockquote>

<p>We are adding 3 to all the numbers in &lsquo;lis&rsquo; and storing in &lsquo;a&rsquo;. If you want to store it in &lsquo;lis&rsquo; itself replace a with lis.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[using modular arithmetic]]></title>
    <link href="http://Dineshs91.github.io/blog/2013/07/20/using-modular-arithmetic/"/>
    <updated>2013-07-20T11:13:00+05:30</updated>
    <id>http://Dineshs91.github.io/blog/2013/07/20/using-modular-arithmetic</id>
    <content type="html"><![CDATA[<p>Using modular arithmetic for various purposes.(In python)</p>

<p>1.) If you want the decimal part of a number use mod operator.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>lang: python </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;blockquote>&lt;blockquote>&lt;blockquote>&lt;p>pi = 3.14159&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>pi % 1&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>.14159
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p></blockquote></blockquote></blockquote>

<p>2.) If you want the digit in one&rsquo;s place and the most significant digit.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>lang: python </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;blockquote>&lt;blockquote>&lt;blockquote>&lt;p>a = 12&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>a % 10&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>2
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>a / 10&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>1
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p></blockquote></blockquote></blockquote>
]]></content>
  </entry>
  
</feed>
